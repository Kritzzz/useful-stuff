
@mixin border-radius($amount: 5px) {
  -webkit-border-radius:  $amount;
  -moz-border-radius:     $amount; 
  border-radius:          $amount;
}

@mixin box-shadow($x: 2px, $y: 2px, $rad: 1px, $color: rgba(0,0,0,0.25)) {
  -webkit-box-shadow: $x $y $rad $color;
  -moz-box-shadow:    $x $y $rad $color;
  box-shadow:         $x $y $rad $color;
} 

@mixin transition($what: all,$speed: 0.15s) {
  -webkit-transition: $what $speed ease-in-out;
  -moz-transition:    $what $speed ease-in-out;
  -ms-transition:     $what $speed ease-in-out;
  -o-transition:      $what $speed ease-in-out;
  transition:         $what $speed ease-in-out;
}

@mixin border($thickness: 2px, $border-color: white) {
  -webkit-border: $thickness solid $border-color;
  -moz-border:    $thickness solid $border-color;
  -ms-border:     $thickness solid $border-color;
  -o-border:      $thickness solid $border-color;
  border:         $thickness solid $border-color;
}

// Formal syntax: 
//    transform: none | transform-functions;
/*
transform: none
transform: translate(12px, 50%) | translateX(2em) |translateY(3in)
transform: scale(2, 0.5) | scaleX(2) | scaleY(0.5)
transform: rotate(0.5turn)
transform: skewX(30deg) | skewY(1.07rad)
transform: matrix(1.0, 2.0, 3.0, 4.0, 5.0, 6.0) | matrix3d(1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0)
transform: translate3d(12px, 50%, 3em) | translateZ(2px)
transform: scale3d(2.5, 1.2, 0.3) |scaleZ(0.3)
transform: rotate3d(1, 2.0, 3.0, 10deg) | rotateX(10deg) | rotateY(10deg)
transform: perspective(17px)
transform: translateX(10px) rotate(10deg) translateY(5px)
*/

@mixin transform ($transforms) {
  -webkit-transform: $transforms;
     -moz-transform: $transforms;
      -ms-transform: $transforms;
       -o-transform: $transforms;
          transform: $transforms;
}

@mixin columns($column-width: 10em, $column-count: 2, $column-gap: 35px) {
    -webkit-columns: $column-width $column-count;
       -moz-columns: $column-width $column-count;
        -ms-columns: $column-width $column-count;
         -o-columns: $column-width $column-count;
            columns: $column-width $column-count;
    
    -webkit-column-gap: $column-gap;
       -moz-column-gap: $column-gap;
        -ms-column-gap: $column-gap;
         -o-column-gap: $column-gap;
            column-gap: $column-gap;
}

//
// Animation mixin - requires Daniel Edens animate.css!
//
// Formal syntax: <single-animation-name> || <time> || <timing-function> || <time> || <single-animation-iteration-count> || <single-animation-direction> || <single-animation-fill-mode>
// Name (example): fadeInLeft
// Duration: Animation-duration (no way!) 1s, 5s 
// Iterations: 1, 3, 9999, infinite
// Fill-mode: forwards, backwards, both, none
// Direction: normal, alternate
// 

@mixin animation($name: fadeInLeft, $duration: 850ms, $timing-function: ease-in-out, $delay:0ms, $iterations: 1, $direction: normal, $fill-mode: both ) {
  -webkit-animation:  $name $duration $timing-function $delay $iterations $direction $fill-mode;
  -moz-animation:     $name $duration $timing-function $delay $iterations $direction $fill-mode;
  -ms-animation:      $name $duration $timing-function $delay $iterations $direction $fill-mode;
  -o-animation:       $name $duration $timing-function $delay $iterations $direction $fill-mode;
  animation:          $name $duration $timing-function $delay $iterations $direction $fill-mode;
}
